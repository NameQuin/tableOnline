<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.tb.dao.UserMapper">
  <resultMap id="BaseResultMap" type="team.tb.pojo.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="ulevel" jdbcType="INTEGER" property="ulevel" />
    <result column="ustatus" jdbcType="INTEGER" property="ustatus" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.tb.pojo.User">
    insert into t_user (uid, username, password,
      ulevel, ustatus)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{ulevel,jdbcType=INTEGER}, #{ustatus,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.tb.pojo.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      ulevel = #{ulevel,jdbcType=INTEGER},
      ustatus = #{ustatus,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select uid, username, password, ulevel, ustatus
    from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select uid, username, password, ulevel, ustatus
    from t_user
  </select>

<!--  根据账号密码查询用户-->
  <select id="findUserByUsernameAndPwd" parameterType="team.tb.pojo.User" resultMap="BaseResultMap">
    select tu.uid, tui.value as username, tu.password, tu.ulevel, tu.ustatus
    from t_user tu, t_user_info tui, t_keys tk
    where tu.username = #{username} and tu.password = #{password}
            and tk.kname = "name" and tk.kid = tui.kid and tui.uid = tu.uid
  </select>
<!--  查找所有普通用户-->
  <select id="getUserList" resultMap="BaseResultMap">
    select tu.uid, tui.value as username, tu.ulevel, tu.ustatus
    from t_user tu, t_user_info tui, t_keys tk
    where tk.kname = "name" and tk.kid = tui.kid and tu.uid = tui.uid
    and tu.ulevel = 0 order by tu.uid limit #{page}, #{limit}
  </select>
<!--  普通用户数据条数-->
  <select id="getCount" resultType="java.lang.Integer">
    select count(uid) from t_user where ulevel = 0
  </select>
<!--  根据条件查询普通用户信息-->
  <select id="getUserOnCondition" resultMap="BaseResultMap">
    <bind name="likePattern" value="'%' + username + '%'"/>
    select tu.uid, tui.value as username, tu.ulevel, tu.ustatus
    from t_user tu, t_user_info tui, t_keys tk
    where tu.uid = tui.uid and tk.kname = "name" and tk.kid = tui.kid
    <if test='username != null and username != ""'>
      and tui.value like #{likePattern}
    </if>
      and tu.ulevel = 0 and tu.uid in (
      SELECT DISTINCT tui3.uid FROM t_user_info tui2, t_user_info tui3, t_user_info tui4, t_user_info tui5
      WHERE  tui2.uid = tui3.uid AND tui2.uid = tui4.uid AND tui2.uid = tui5.uid
        <if test="grade != null and grade != 0">
          AND EXISTS (SELECT * FROM t_keys tk2 WHERE tk2.kname = "grade" AND tui2.kid = tk2.kid AND tui2.value = #{grade}
            <if test="department != null and department != 0">
              AND EXISTS (SELECT * FROM t_keys tk3 WHERE tk3.kname = "department" AND tui3.kid = tk3.kid AND tui3.value = #{department}
                  <if test="major != null and major != 0">
                    AND EXISTS (SELECT * FROM t_keys tk4 WHERE tk4.kname = "major" AND tui4.kid = tk4.kid AND tui4.value = #{major}
                        <if test="clazz != null and clazz != 0">
                          AND EXISTS (SELECT * FROM t_keys tk5 WHERE tk5.kname = "class" AND tui5.kid = tk5.kid AND tui5.value = #{clazz})
                        </if>
                    )
                  </if>
                  )
            </if>
              )
        </if>
        )
    limit #{page}, #{limit}
  </select>
  <!--  根据条件查询普通用户信息条数，方便分页-->
  <select id="getUserCountOnCondition" resultType="java.lang.Integer">
    <bind name="likePattern" value="'%' + username + '%'"/>
    select count(tu.uid)
    from t_user tu, t_user_info tui, t_keys tk
    where tu.uid = tui.uid and tk.kname = "name" and tk.kid = tui.kid
    <if test='username != null and username != ""'>
      and username like #{likePattern}
    </if>
    and tu.ulevel = 0 and tu.uid in (
    SELECT DISTINCT tui3.uid FROM t_user_info tui2, t_user_info tui3, t_user_info tui4, t_user_info tui5
    WHERE  tui2.uid = tui3.uid AND tui2.uid = tui4.uid AND tui2.uid = tui5.uid
    <if test="grade != null and grade != 0">
      AND EXISTS (SELECT * FROM t_keys tk2 WHERE tk2.kname = "grade" AND tui2.kid = tk2.kid AND tui2.value = #{grade}
      <if test="department != null and department != 0">
        AND EXISTS (SELECT * FROM t_keys tk3 WHERE tk3.kname = "department" AND tui3.kid = tk3.kid AND tui3.value = #{department}
        <if test="major != null and major != 0">
          AND EXISTS (SELECT * FROM t_keys tk4 WHERE tk4.kname = "major" AND tui4.kid = tk4.kid AND tui4.value = #{major}
          <if test="clazz != null and clazz != 0">
            AND EXISTS (SELECT * FROM t_keys tk5 WHERE tk5.kname = "class" AND tui5.kid = tk5.kid AND tui5.value = #{clazz})
          </if>
          )
        </if>
        )
      </if>
      )
    </if>
    )
  </select>
<!--根据班级查找用户信息-->
  <select id="getUserByClass" resultMap="BaseResultMap">
    select tu.uid, CONCAT(c.cfullname, "--", tui1.value) AS username
    from t_user tu, t_user_info tui1, t_user_info tui2, t_keys tk1, t_keys tk2, t_class c
    where tk1.kname = "name" AND tk1.kid = tui1.kid AND tu.uid = tui1.uid AND tu.uid = tui2.uid AND tk2.kname = "class" AND tk2.kid = tui2.kid
      and c.cid = tui2.value and tu.ulevel = 0
    <if test="clazzs != null and clazzs.length > 0">
      and tui2.value in
        <foreach collection="clazzs" item="clazzId" index="index" open="(" separator="," close=")">
          #{clazzId}
        </foreach>
    </if>
    order by username
  </select>

<!--  根据专业获取学生-->
  <select id="getUserByMajor" resultMap="BaseResultMap">
    select tu.uid
    from t_user tu, t_user_info tui1,  t_keys tk1
    where tu.uid = tui1.uid AND tk1.kname = "major" AND tk1.kid = tui1.kid
    and tu.ulevel = 0
    <if test="majors != null and majors.length > 0">
      and tui1.value in
      <foreach collection="majors" item="majorId" index="index" open="(" separator="," close=")">
        #{majorId}
      </foreach>
    </if>
  </select>
<!--  根据院系获取学生-->
  <select id="getUserByDepartment" resultMap="BaseResultMap">
    select tu.uid
    from t_user tu, t_user_info tui1,  t_keys tk1
    where tu.uid = tui1.uid AND tk1.kname = "major" AND tk1.kid = tui1.kid
    and tu.ulevel = 0
    <if test="departments != null and departments.length > 0">
      and tui1.value in
      <foreach collection="departments" item="departmentId" index="index" open="(" separator="," close=")">
        #{departmentId}
      </foreach>
    </if>
  </select>

<!--  根据年级查找学生-->
  <select id="getUserByGrade" resultMap="BaseResultMap">
    select tu.uid
    from t_user tu, t_user_info tui1,  t_keys tk1
    where tu.uid = tui1.uid AND tk1.kname = "grade" AND tk1.kid = tui1.kid
    and tu.ulevel = 0
    <if test="grades != null and grades.length > 0">
      and tui1.value in
      <foreach collection="grades" item="gradeId" index="index" open="(" separator="," close=")">
        #{gradeId}
      </foreach>
    </if>
  </select>
<!--获取所有的普通用户的id-->
  <select id="selectAllNormalUserId" resultType="java.lang.String">
    select uid
    from t_user
    where ulevel = 0 and ustatus = 1
  </select>

<!--  获得管理员列表-->
  <select id="getAdminList" resultMap="BaseResultMap">
    select tu.uid, tui.value as username, tu.ulevel, tu.ustatus
    from t_user tu, t_user_info tui, t_keys tk
    where tk.kname = "name" and tk.kid = tui.kid and tu.uid = tui.uid
      and tu.ulevel = 1 order by tu.uid limit #{page}, #{limit}
  </select>
  <!--  管理员数据条数-->
  <select id="getAdminCount" resultType="java.lang.Integer">
    select count(uid) from t_user where ulevel = 1
  </select>
<!--  符合条件的管理员数据-->
  <select id="searchAdmin" resultMap="BaseResultMap">
    <bind name="likePattern" value="'%' + username + '%'"/>
    select tu.uid, tui.value as username, tu.ulevel, tu.ustatus
    from t_user tu, t_user_info tui, t_keys tk
    where tu.uid = tui.uid and tk.kname = "name" and tk.kid = tui.kid and tu.ulevel = 1
    <if test='username != null and username != ""'>
      and tui.value like #{likePattern}
    </if>
    limit #{page}, #{limit}
  </select>
<!--  符合条件的管理员数量-->
  <select id="searchAdminCount" resultType="java.lang.Integer">
    <bind name="likePattern" value="'%' + username + '%'"/>
    select count(tu.uid)
    from t_user tu, t_user_info tui, t_keys tk
    where tu.uid = tui.uid and tk.kname = "name" and tk.kid = tui.kid and tu.ulevel = 1
    <if test='username != null and username != ""'>
      and tui.value like #{likePattern}
    </if>
  </select>
<!--  普通用户的封禁与解封-->
  <update id="changeUserStatus">
    update t_user
    set ustatus = #{status}
    where uid = #{uid} and ulevel = 0
  </update>
<!--  管理员的封禁与解封-->
  <update id="changeAdminStatus">
    update t_user
    set ustatus = #{status}
    where uid = #{uid} and ulevel = 1
  </update>
<!--  修改管理员权限-->
  <update id="updateUserLevel">
    update t_user
    set ulevel = #{level}
    where uid = #{uid}
  </update>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.tb.dao.TableInfoMapper">
  <resultMap id="BaseResultMap" type="team.tb.pojo.TableInfo">
    <id column="tfid" jdbcType="INTEGER" property="tfid" />
    <result column="tftitle" jdbcType="VARCHAR" property="tftitle" />
    <result column="tfbegintime" jdbcType="TIMESTAMP" property="tfbegintime" />
    <result column="tfendtime" jdbcType="TIMESTAMP" property="tfendtime" />
    <result column="tfsrc" jdbcType="VARCHAR" property="tfsrc" />
    <result column="tfflag" jdbcType="INTEGER" property="tfflag" />
    <result column="tfcreator" jdbcType="VARCHAR" property="tfcreator" />
    <result column="tfkeys" jdbcType="VARCHAR" property="tfkeys" />
    <result column="tfcondition" jdbcType="LONGVARCHAR" property="tfcondition" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_table_info
    where tfid = #{tfid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.tb.pojo.TableInfo">
    insert into t_table_info (tfid, tftitle, tfbegintime,
      tfendtime, tfsrc, tfflag,
      tfcreator, tfkeys, tfcondition
      )
    values (#{tfid,jdbcType=INTEGER}, #{tftitle,jdbcType=VARCHAR}, #{tfbegintime,jdbcType=TIMESTAMP},
      #{tfendtime,jdbcType=TIMESTAMP}, #{tfsrc,jdbcType=VARCHAR}, #{tfflag,jdbcType=INTEGER},
      #{tfcreator,jdbcType=VARCHAR}, #{tfkeys,jdbcType=VARCHAR}, #{tfcondition,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.tb.pojo.TableInfo">
    update t_table_info
    set tftitle = #{tftitle,jdbcType=VARCHAR},
      tfbegintime = #{tfbegintime,jdbcType=TIMESTAMP},
      tfendtime = #{tfendtime,jdbcType=TIMESTAMP},
      tfsrc = #{tfsrc,jdbcType=VARCHAR},
      tfflag = #{tfflag,jdbcType=INTEGER},
      tfcreator = #{tfcreator,jdbcType=VARCHAR},
      tfkeys = #{tfkeys,jdbcType=VARCHAR},
      tfcondition = #{tfcondition,jdbcType=LONGVARCHAR}
    where tfid = #{tfid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select tfid, tftitle, tfbegintime, tfendtime, tfsrc, tfflag, tfcreator, tfkeys, tfcondition
    from t_table_info
    where tfid = #{tfid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select tfid, tftitle, tfbegintime, tfendtime, tfsrc, tfflag, tfcreator, tfkeys, tfcondition
    from t_table_info
  </select>

<!--  管理员发布的所有表单-->
  <select id="getFormListByAdminId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select tti.tfid, tti.tftitle, tti.tfbegintime, tti.tfendtime, tti.tfflag, tui.value as tfcreator
    from t_table_info tti, t_user_info tui, t_keys tk
    where tti.tfcreator = #{id} and tti.tfcreator = tui.uid and tk.kid = tui.kid and tk.kname = "name" limit #{page}, #{limit}
  </select>
<!--管理员发布的表单总数-->
  <select id="getFormCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(tfid) from t_table_info
    where tfcreator = #{id}
  </select>
<!--  按条件搜索管理员发布表单，动态sql内使用<符号会报错，要么使用替代符号，要么掉换位置-->
  <select id="searchForm"  resultMap="BaseResultMap">
    <bind name="likePattern" value="'%' + formTitle + '%'"/>
    select tti.tfid, tti.tftitle, tti.tfbegintime, tti.tfendtime, tti.tfflag, tui.value as tfcreator
    from t_table_info tti, t_user_info tui, t_keys tk
    where tti.tfcreator = #{id} and tti.tfcreator = tui.uid and tk.kid = tui.kid and tk.kname = "name"
    <if test="startTime != null and startTime != ''">
      and unix_timestamp(tti.tfbegintime) > unix_timestamp(#{startTime})
    </if>
    <if test="endTime != null and endTime != ''">
      and unix_timestamp(#{endTime}) > unix_timestamp(tti.tfbegintime)
    </if>
    <if test="formTitle != null and formTitle != ''">
      and tti.tftitle like #{likePattern}
    </if>
    limit #{page}, #{limit}
  </select>
<!--  符合搜索条件的表单总数-->
  <select id="getFormCountOnCondition"   resultType="java.lang.Integer">
    <bind name="likePattern" value="'%' + formTitle + '%'"/>
    select count(tfid) from t_table_info
    where tfcreator = #{id}
    <if test="startTime != null and startTime != ''">
      and unix_timestamp(tfbegintime) > unix_timestamp(#{startTime})
    </if>
    <if test="endTime != null and endTime != ''">
      and unix_timestamp(#{endTime}) > unix_timestamp(tfbegintime)
    </if>
    <if test="formTitle != null and formTitle != ''">
      and tftitle like #{likePattern}
    </if>
  </select>
</mapper>

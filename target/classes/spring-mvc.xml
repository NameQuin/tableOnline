<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 定义自动扫描包的路径,在此处仅扫描Controller所在的包，如果有多个需要逗号分隔。需要注意：此处扫描和spring的自动扫描的包不要出现重叠-->
    <context:component-scan base-package="team.tb.controller">
    </context:component-scan>
    <!-- 注册spring mvc的注解驱动，只有注册了springmvc才能使用完整的注解功能，可以自动加载处理器映射器和处理器适配器 -->
    <!-- 同时默认底层会集成jackson进行对象或集合的json字符串格式转换   -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
                <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--  视图解析器  -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
<!--        前缀   自动加上/WEB-INF/pages/-->
        <property name="prefix" value="/WEB-INF/pages/"/>
<!--        后缀   变成了WEB-INF/pages/main.html-->
        <property name="suffix" value=".html"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="order" value="1"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

<!--    &lt;!&ndash;  配置多个视图解析&ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->

<!--        <property name="viewResolvers">-->
<!--            <list>-->
<!--                &lt;!&ndash;thymeleaf解析器，无法解析jsp，可以解析html&ndash;&gt;-->
<!--                <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">-->
<!--                    <property name="characterEncoding" value="UTF-8"/>-->
<!--                    <property name="templateEngine" ref="templateEngine" />-->
<!--                    <property name="viewNames" value="*"/>-->
<!--                    <property name="order" value="2" />-->
<!--                </bean>-->
<!--                &lt;!&ndash;jsp&ndash;&gt;-->
<!--                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--                    <property name="prefix" value="/WEB-INF/pages/"/>-->
<!--                    <property name="suffix" value=".jsp"/>-->
<!--                    <property name="viewNames" value="*"/>-->
<!--                    <property name="order" value="1" />-->
<!--                </bean>-->

<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->


    <!--所有静态资源需要重新映射 -->
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**">
    </mvc:resources>
    <mvc:resources location="/WEB-INF/pages/" mapping="/pages/**">
    </mvc:resources>


<!--    拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
<!--            /**表示该路径下的所有子路径-->
            <mvc:mapping path="/**"/>
            <bean class="team.tb.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 文件上传-->
    <bean name="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>
</beans>
